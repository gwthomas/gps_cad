<launch>

  <arg name="db" default="false" />
  <arg name="debug" default="false" />

  <rosparam param="/move_group/trajectory_execution/allowed_start_tolerance">
    0.0
  </rosparam>

  <!--include file="$(find pr2_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="false"/>
  </include-->

  <node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_0" args="0 0 0 0 0 0 odom_combined base_footprint 100" />

  <!--node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="false"/>
    <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
  </node-->

  <!--node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" /-->

  <include file="$(find pr2_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <!--arg name="fake_execution" value="true"/-->
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <include file="$(find pr2_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <include file="$(find pr2_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)"/>
  <include file="$(find pr2_arm_kinematics)/launch/pr2_ik_larm_node.launch"/>
  <include file="$(find pr2_controller_configuration)/pr2_default_controllers.launch"/>
</launch>
